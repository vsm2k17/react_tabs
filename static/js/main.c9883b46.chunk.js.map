{"version":3,"sources":["App.js","Component/Tabs/Tabs.js","Typedefs.js","index.js"],"names":["Tabs","PropTypes","shape","id","number","title","string","constent","state","index","prev","document","addEventListener","event","target","className","setState","classList","remove","add","this","props","tabs","map","tab","key","content","React","Component","i","length","App","ReactDOM","render","getElementById"],"mappings":"0JAoBA,I,gGC4BeA,GC9CSC,IAAUC,MAAM,CACtCC,GAAIF,IAAUG,OACdC,MAAOJ,IAAUK,OACjBC,SAAUN,IAAUK,S,4MDCpBE,MAAQ,CACNC,MAAO,EACPC,KAAM,M,kEAGa,IAAD,OAalBC,SAASC,iBAAiB,SAZJ,SAACC,GACU,SAA3BA,EAAMC,OAAOC,YACf,EAAKC,UAAS,iBAAO,CAAEP,MAAOI,EAAMC,OAAOX,OACvC,EAAKK,MAAME,MACb,EAAKF,MAAME,KAAKO,UAAUC,OAAO,eAGnC,EAAKV,MAAME,KAAOG,EAAMC,OACxBD,EAAMC,OAAOG,UAAUE,IAAI,qB,+BAQ/B,OACE,oCACE,6BACGC,KAAKC,MAAMC,KAAKC,KAAI,SAAAC,GAAG,OACtB,yBAAKC,IAAKD,EAAIrB,GAAIY,UAAU,OAAOZ,GAAIqB,EAAIrB,IACxCqB,EAAInB,WAIX,uBAAGU,UAAU,WACVK,KAAKC,MAAMC,KAAKF,KAAKZ,MAAMC,OAAOiB,c,GAjC1BC,IAAMC,YDAnBN,EAAO,CACX,CACEjB,MAAO,QACPqB,QAAS,eAEX,CACErB,MAAO,QACPqB,QAAS,eAEX,CACErB,MAAO,QACPqB,QAAS,gBAIJG,EAAI,EAAGA,EAAIP,EAAKQ,OAAQD,GAAK,EACpCP,EAAKO,GAAG1B,GAAK0B,EAGf,IAIeE,EAJH,kBACV,kBAAC,EAAD,CAAMT,KAAMA,KGrBdU,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,U","file":"static/js/main.c9883b46.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Tabs from './Component/Tabs/Tabs';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nfor (let i = 0; i < tabs.length; i += 1) {\n  tabs[i].id = i;\n}\n\nconst App = () => (\n  <Tabs tabs={tabs} />\n);\n\nexport default App;\n","import React from 'react';\nimport './Tabs.css';\nimport PropTypes from 'prop-types';\nimport { TabsType } from '../../Typedefs';\n\nclass Tabs extends React.Component {\n  state = {\n    index: 0,\n    prev: null,\n  }\n\n  componentDidMount() {\n    const onTabSelected = (event) => {\n      if (event.target.className === 'head') {\n        this.setState(() => ({ index: event.target.id }));\n        if (this.state.prev) {\n          this.state.prev.classList.remove('head-active');\n        }\n\n        this.state.prev = event.target;\n        event.target.classList.add('head-active');\n      }\n    };\n\n    document.addEventListener('click', onTabSelected);\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          {this.props.tabs.map(tab => (\n            <div key={tab.id} className=\"head\" id={tab.id}>\n              {tab.title}\n            </div>\n          ))}\n        </div>\n        <p className=\"content\">\n          {this.props.tabs[this.state.index].content}\n        </p>\n      </>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(TabsType.isRequired).isRequired,\n};\nexport default Tabs;\n","import PropTypes from 'prop-types';\n\nexport const TabsType = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  constent: PropTypes.string,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}