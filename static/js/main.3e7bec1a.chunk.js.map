{"version":3,"sources":["App.js","Component/Tabs/Tabs.js","Typedefs.js","index.js"],"names":["Tabs","PropTypes","shape","id","number","title","string","constent","state","index","prev","onTabSelected","e","x","target","setState","classList","remove","add","className","this","props","tabs","map","tab","type","key","onClick","content","React","Component","i","length","App","ReactDOM","render","document","getElementById"],"mappings":"0JAoBA,I,gGC+BeA,GCjDSC,IAAUC,MAAM,CACtCC,GAAIF,IAAUG,OACdC,MAAOJ,IAAUK,OACjBC,SAAUN,IAAUK,S,4MDCpBE,MAAQ,CACNC,MAAO,EACPC,KAAM,M,EAGRC,cAAgB,SAACC,GACf,IAAMC,EAAID,EAAEE,OAAOX,GAEnB,EAAKY,UAAS,iBAAO,CAAEN,MAAOI,MAE1B,EAAKL,MAAME,MACb,EAAKF,MAAME,KAAKM,UAAUC,OAAO,eAGnC,EAAKT,MAAME,KAAOE,EAAEE,OACpBF,EAAEE,OAAOE,UAAUE,IAAI,gB,uDAGf,IAAD,OACP,OACE,6BACE,yBAAKC,UAAU,WACZC,KAAKC,MAAMC,KAAKC,KAAI,SAAAC,GAAG,OACtB,4BACEC,KAAK,SACLC,IAAKF,EAAIrB,GACTgB,UAAU,OACVhB,GAAIqB,EAAIrB,GACRwB,QAAS,EAAKhB,eAEba,EAAInB,WAIX,uBAAGc,UAAU,WACVC,KAAKC,MAAMC,KAAKF,KAAKZ,MAAMC,OAAOmB,c,GApC1BC,IAAMC,YDAnBR,EAAO,CACX,CACEjB,MAAO,QACPuB,QAAS,eAEX,CACEvB,MAAO,QACPuB,QAAS,eAEX,CACEvB,MAAO,QACPuB,QAAS,gBAIJG,EAAI,EAAGA,EAAIT,EAAKU,OAAQD,GAAK,EACpCT,EAAKS,GAAG5B,GAAK4B,EAGf,IAIeE,EAJH,kBACV,kBAAC,EAAD,CAAMX,KAAMA,KGrBdY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3e7bec1a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Tabs from './Component/Tabs/Tabs';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nfor (let i = 0; i < tabs.length; i += 1) {\n  tabs[i].id = i;\n}\n\nconst App = () => (\n  <Tabs tabs={tabs} />\n);\n\nexport default App;\n","import React from 'react';\nimport './Tabs.css';\nimport PropTypes from 'prop-types';\nimport { TabsType } from '../../Typedefs';\n\nclass Tabs extends React.Component {\n  state = {\n    index: 0,\n    prev: null,\n  }\n\n  onTabSelected = (e) => {\n    const x = e.target.id;\n\n    this.setState(() => ({ index: x }));\n\n    if (this.state.prev) {\n      this.state.prev.classList.remove('head-active');\n    }\n\n    this.state.prev = e.target;\n    e.target.classList.add('head-active');\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          {this.props.tabs.map(tab => (\n            <button\n              type=\"button\"\n              key={tab.id}\n              className=\"head\"\n              id={tab.id}\n              onClick={this.onTabSelected}\n            >\n              {tab.title}\n            </button>\n          ))}\n        </div>\n        <p className=\"content\">\n          {this.props.tabs[this.state.index].content}\n        </p>\n      </div>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(TabsType.isRequired).isRequired,\n};\nexport default Tabs;\n","import PropTypes from 'prop-types';\n\nexport const TabsType = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  constent: PropTypes.string,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}